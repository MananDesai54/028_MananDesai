# -*- coding: utf-8 -*-
"""2_DT_Iris.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1TOvplvvfcXyAhy-j0ehZ-GCp0E9SQVYe
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

from sklearn import datasets, metrics
from sklearn.tree import DecisionTreeClassifier, export_graphviz
from sklearn.model_selection import train_test_split
from subprocess import call

from google.colab import drive
drive.mount("/content/drive")

#Load dataset
ds_iris = datasets.load_iris()

ds = pd.DataFrame(ds_iris.data)
#ds.head()

#ds.info()
#ds.describe()

"""Printing the names of features and label types of wines"""

# print the names of the 13 features
print("Features:", ds_iris.feature_names, sep="\n")

# print the label type of wine(class_0, class_1, class_2)
print("\nLabels:", ds_iris.target_names)

# print data(feature)shape
print("No. of examples and features in the dataset are:", ds_iris.data.shape)

#split data set into train and test sets
training_data, testing_data, training_target, testing_target = train_test_split(ds_iris.data, ds_iris.target, test_size = 0.3, random_state = 7)

#Create a Decision Tree Classifier (using Gini)
dtc = DecisionTreeClassifier(criterion = "gini")

#Train the model using the training sets
dtc.fit(training_data, training_target)

# Predict the classes of test data
pred = dtc.predict(testing_data)
print("prediction:",pred)

# Model Accuracy, how often is the classifier correct?
Accuracy = metrics.accuracy_score(testing_target, pred)
print("Accuracy:",Accuracy)

export_graphviz(dtc,out_file='iris_tree.dot',feature_names=list(ds_iris.feature_names),
               class_names=list(ds_iris.target_names), filled=True)

# Convert to png
call(['dot', '-Tpng', 'iris_tree.dot', '-o', 'iris_tree.png', '-Gdpi=600'])

# Display in python
plt.figure(figsize = (10, 10))
plt.imshow(plt.imread('iris_tree.png'))
plt.axis('off')
plt.show()